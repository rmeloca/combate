#lang scheme

(require "tabuleiro.scm")
(require "direcao.scm")

;define uma instância de teste
(define instanciaTeste
	(list
		(list (getEnemyPiece GENERAL) (getEnemyPiece SOLDADO) (getEnemyPiece BANDEIRA))
		(list TERRITORIO TERRITORIO TERRITORIO)
		(list TENENTE BANDEIRA SOLDADO)
	)
)

;define a instância inicial de um tabuleiro sem estratégia montada
(define tabuleiro
	(list
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
		(list TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO TERRITORIO)
	)
)

;define método que opera sobre um tabuleiro atribuindo uma estratégia randômica
(define (initialize tabuleiro)
	tabuleiro
)

;define mudança de turno
(define (modificarTurno turno)
	(if
		(eq? turno 1)
		2
		1
	)
)

;define o motor do jogo. laço principal
(define (motor tabuleiro turno)
	(if
		(haveWinner tabuleiro)
		"Vencedor"
		(if
			(eq? turno 1)
			(motor
				(move (getCoordenada (read) (read)) NORTH tabuleiro)
				(modificarTurno turno)
			)
			(motor (move (getCoordenada 1 2) SOUTH tabuleiro) (modificarTurno turno))
		)
	)
)

;executa o jogo
(print instanciaTeste 1)
(motor (initialize instanciaTeste) 1)